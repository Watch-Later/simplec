/*
	这里是关于这个系统使用的方面, 一些注意事项, 主要是对于VS的具体编译配置说明.
对于GCC还需要单搞,这些代码都具备跨平台的能力,但是需要你熟悉和配置使用!
尝试了解下面操作的原因,熟悉它,C/C++开发都是这样繁琐,需要从头来! 
												--	by simplec cwz

1.设置 VS的 项目右键属性 -> VC++ 目录
1.1. 添加 包含目录
	$(ProjectDir)main/body/include					--	框架入口外部业务处理头文件文件夹
	$(ProjectDir)extern/pthread/include				--	框架内置的线程库头文件文件夹
	$(ProjectDir)extern/iconv/include				--	框架libiconv库头文件文件夹
	$(ProjectDir)extern/curl/include				--	框架libcurl库头文件文件夹
	$(ProjectDir)extern/openssl/include				--	框架libopenssl库头文件文件夹
	$(ProjectDir)module/schead/include				--	框架帮助库头文件文件夹
	$(ProjectDir)module/struct/include				--	框架数据结构头文件文件夹
	$(ProjectDir)module/service/include				--	框架提供的辅助服务头文件文件夹
	$(ProjectDir)module/colog/include				--	框架辅助日志业务头文件文件夹
	$(ProjectDir)module/iop/include					--	框架网络IO文件文件夹

2. lib 库添加
2.1 添加 pthread 模块lib 引用, 看 引用目录
	$(ProjectDir)/pthread/lib
	$(ProjectDir)/iconv/lib

2.2 对于 x64 附注
	当前删掉了 x64 支持, 如果需要推荐自己弄弄, 或者联系我技术支持
	wangzhione@163.com
	以后默认都是 x86 的库

3. dll 库的添加
3.1 添加 dll 目前这个需要手工操作,目前不智能,VS 对C++支持的好缓慢, M$确实很坑
	找到相应的 生成的exe目录下添加 对应的 dll, 

	x86 => $(ProjectDir)/pthread/dll

4. 添加部分宏 C/C++ -> 预处理器 -> 预处理器定义
	_DEBUG
	_HAVE_SELECT
	CURL_STATICLIB
	WIN32_LEAN_AND_MEAN
	_CRT_SECURE_NO_WARNINGS
	_CRT_NONSTDC_NO_DEPRECATE
	_WINSOCK_DEPRECATED_NO_WARNINGS

5. 文件保存(文件->文件高级保存选项)直接采用UTF-8(带签名)格式保存
	window 采用 > notepad++ convert | 安装自动转换插件
	linux  采用 > enca -L zh_CN -x UTF-8 *
	config 采用 > 环境而定

6. 编译额外选项 
	C/C++ -> 高级 -> 编译为 -> 编译为C代码
	C/C++ -> 代码生成 -> 运行库 -> 多线程/MT

	链接器 -> 系统 -> 子系统 -> 控制台
	链接器 -> 输入 -> 附加依赖项 -> ws2_32.lib

7. test 单元测试, 规则
	文件名 test_xxxx.c -> 构建 void test_xxxx(void) 函数

	void test_xxxx(void) {
		...
	
	#ifdef __GNUC__
		exit(EXIT_SUCCESS);
	#endif
	}

	这样做方便linux挨个生成单元测试的可执行文件

	window上, 参照 simple.c 中 simplec_test 函数运行单元测试

*/